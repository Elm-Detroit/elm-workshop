var _user$project$Main$subscriptions = function (_p0) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main_ops = _user$project$Main_ops || {};
_user$project$Main_ops['=>'] = F2(
	function (v0, v1) {
		return {ctor: '_Tuple2', _0: v0, _1: v1};
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		if (_p1.ctor === 'ApiResponse') {
			var _p2 = _p1._0;
			if (_p2.ctor === 'Ok') {
				var updatedModel = _elm_lang$core$Native_Utils.update(
					model,
					{portfolio: _p2._0});
				return {ctor: '_Tuple2', _0: updatedModel, _1: _elm_lang$core$Platform_Cmd$none};
			} else {
				var errorMessage = A2(
					_elm_lang$core$Basics_ops['++'],
					'An error occurred: ',
					_elm_lang$core$Basics$toString(_p2._0));
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{errorMessage: errorMessage}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			}
		} else {
			return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$view = function (model) {
	return _elm_lang$html$Html$text(
		_elm_lang$core$Basics$toString(model));
};
var _user$project$Main$initialModel = function (url) {
	return {
		errorMessage: '',
		portfolio: {
			categories: {ctor: '[]'},
			items: {ctor: '[]'}
		},
		apiUrl: url
	};
};
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {errorMessage: a, portfolio: b, apiUrl: c};
	});
var _user$project$Main$Portfolio = F2(
	function (a, b) {
		return {categories: a, items: b};
	});
var _user$project$Main$Category = F2(
	function (a, b) {
		return {id: a, label: b};
	});
var _user$project$Main$categoryDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'label',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'id',
		_elm_lang$core$Json_Decode$int,
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Main$Category)));
var _user$project$Main$Item = F7(
	function (a, b, c, d, e, f, g) {
		return {id: a, title: b, categoryId: c, imageUrl: d, linkUrl: e, description: f, overlayColor: g};
	});
var _user$project$Main$itemDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'overlayColor',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'description',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'linkUrl',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'imageUrl',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'categoryId',
					_elm_lang$core$Json_Decode$int,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'title',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'id',
							_elm_lang$core$Json_Decode$int,
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Main$Item))))))));
var _user$project$Main$portfolioDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'items',
	_elm_lang$core$Json_Decode$list(_user$project$Main$itemDecoder),
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'categories',
		_elm_lang$core$Json_Decode$list(_user$project$Main$categoryDecoder),
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Main$Portfolio)));
var _user$project$Main$None = {ctor: 'None'};
var _user$project$Main$ApiResponse = function (a) {
	return {ctor: 'ApiResponse', _0: a};
};
var _user$project$Main$getPortfolio = function (url) {
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Main$ApiResponse,
		A2(_elm_lang$http$Http$get, url, _user$project$Main$portfolioDecoder));
};
var _user$project$Main$init = function (url) {
	return {
		ctor: '_Tuple2',
		_0: _user$project$Main$initialModel(url),
		_1: _user$project$Main$getPortfolio(url)
	};
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		init: _user$project$Main$init('http://www.mocky.io/v2/59f8cfa92d0000891dad41ed'),
		subscriptions: _user$project$Main$subscriptions
	})();
